apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          command:
            - redis-server
            # - "/redis-master/redis.conf"
          env:
            - name: HASH_KEY
              valueFrom:
                configMapKeyRef:
                  key: HASH_KEY
                  name: redis-configmap
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: redis-configmap
            - name: REDIS_MASTER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_MASTER_PASSWORD
                  name: redis-configmap
          ports:
            - containerPort: 6379



# apiVersion: apps/v1beta2
# kind: StatefulSet
# metadata:
#   name: redis
# spec:
#   selector:
#     matchLabels:
#       app: redis  
#   serviceName: redis-service
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: redis 
#     spec:
#       containers:
#         - name: redis
#           image: redis
#           # args: ["--requirepass", "admin", "--appendonly", "yes", "--save", "900", "1", "--save", "30", "2"]
#           ports:
#             - containerPort: 6379
#               name: redis
#           resources:
#             limits:
#               cpu: .50
#               memory: 1500Mi
#             requests:
#               cpu: .25
#               memory: 1024Mi
#           volumeMounts:
#             - name: redis-volume
#               mountPath: /data
#   volumeClaimTemplates:
#   - metadata:
#       name: redis-volume
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       resources:
#         requests:
#           storage: 20Gi
